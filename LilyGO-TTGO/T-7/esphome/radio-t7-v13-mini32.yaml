esphome:                                    # https://esphome.io/components/esphome
  name: radio-t7-v13-mini32
  friendly_name: Radio T7 V1.3 Mini32
  includes: 
    - components/melodies.h
  on_boot: 
    priority: 800
    then:
      - if:
          condition:
            lambda: 'return id(melodySelect).size() != (sizeof(rtttl_Melodies)/sizeof(rtttl_Melodies[0]));'
          then:
            - logger.log:
                format: "MELODY ERROR"
                level: ERROR
      # - lambda: |-
      #     id(selectDemo)->traits.set_options({"Empty", "one","two","three"});
          
esp32:                                      # https://esphome.io/components/esp32
  board: ttgo-t7-v13-mini32                 # https://registry.platformio.org/platforms/platformio/espressif32/boards
  framework:
    type: arduino                           # https://esphome.io/components/esp32#arduino-framework

logger:                                     # https://esphome.io/components/logger.html
  level: ERROR

# Enable Home Assistant API
api:                                        # https://esphome.io/components/api
  actions:                                  # https://esphome.io/components/api#user-defined-actions
    - action: play_melody
      then:
        - rtttl.play:
            # rtttl: !lambda 'return id(melodySelect).state;'
            rtttl: !lambda 'return rtttl_Melodies[id(melodySelect).active_index().value()];'

#   encryption:
#     key: "qasVZutlHVzubQ4MpNBfyVTe0QUV4MRNElEHSBUh8XI="

# ota:                                        # https://esphome.io/components/ota/esphome.html
#   - platform: esphome
#     password: "6673087a0d426048b95c79b2180b15ff"

mqtt:                                       # https://esphome.io/components/mqtt
  broker: !secret mqtt_broker
  username: !secret mqtt_user
  password: !secret mqtt_password


wifi:                                       # https://esphome.io/components/wifis
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  # manual_ip:
  #   static_ip: !secret wifi_static_ip_radio_t7_v13_mini
  #   gateway: !secret wifi_gateway
  #   subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Radio-T7-V13-Mini32"
    password: "kwH50z6TL0IH"

# captive_portal:                             # https://esphome.io/components/captive_portal.html


external_components:                        # https://esphome.io/components/external_components.html
  - source: components
    components: [radio]


time:                                       # https://esphome.io/components/time/
  - id: time_device
    timezone: MSK-3                         # https://github.com/nayarsystems/posix_tz_db/blob/master/zones.csv
    platform: sntp                          # https://esphome.io/components/time/sntp


# interval:                                   # https://esphome.io/components/interval
#   - interval: 20s
#     then:
#       - select.next: displaySelect          # https://esphome.io/components/select/#select-next-action


i2c:                                        # https://esphome.io/components/i2c.html
  - id: bus
    # frequency: 400kHz 
    sda: 21
    scl: 22
    scan: true


# radio:
#     id: rda5807m_id
#     i2c_id: bus
#     address: 0x11
#     band: 1018
#     volume: 2


sensor:                                     # https://esphome.io/components/sensor/#base-sensor-configuration

  - id: bme280
    platform: bme280_i2c                    # https://esphome.io/components/sensor/bme280
    i2c_id: bus
    address: 0x76
    update_interval: 15s
    temperature:
      id: bme280_Temperature
      name: "Температура (BME280)"
      device_class: temperature             # https://www.home-assistant.io/integrations/sensor/
      icon: mdi:temperature-celsius         # https://pictogrammers.com/library/mdi/
    humidity:
      id: bme280_Humidity
      name: "Влажность (BME280)"
      device_class: humidity                # https://www.home-assistant.io/integrations/sensor/
      icon: mdi:water-percent               # https://pictogrammers.com/library/mdi/
    pressure:
      id: bme280_Pressure
      name: "Давление (BME280)"
      device_class: pressure                # https://www.home-assistant.io/integrations/sensor/
      icon: mdi:gauge                       # https://pictogrammers.com/library/mdi/
      unit_of_measurement: "mm"
      filters:                              # https://esphome.io/components/sensor/#sensor-filters
        - lambda: return x * 0.750062;

  - id: rot_enc
    platform: rotary_encoder                # https://esphome.io/components/sensor/rotary_encoder
    name: "Крутилка"
    pin_a: 36
    pin_b: 35
    resolution: 2
    restore_mode: ALWAYS_ZERO
    publish_initial_value: True
    on_clockwise:                           # https://esphome.io/components/sensor/rotary_encoder#on-clockwise-and-on-anticlockwise-triggers
      then:
        - if:                               # https://esphome.io/automations/actions#if-action
            condition:
              - lambda: 'return id(changeRadioMode).state == "VOLUME";'
            then:
              - logger.log: "Volume Down"   # https://esphome.io/components/logger.html#logger-log-action
              - select.previous:            # https://esphome.io/components/select/#select-previous-action
                  id: volumeSelect
                  cycle: False    
        - if:                               # https://esphome.io/automations/actions#if-action
            condition:
              - lambda: 'return id(changeRadioMode).state == "STATION";'
            then:
              - logger.log: "Station Down"  # https://esphome.io/components/logger.html#logger-log-action
              - select.previous:            # https://esphome.io/components/select/#select-previous-action
                  id: stationSelect
                  cycle: True
    on_anticlockwise:                       # https://esphome.io/components/sensor/rotary_encoder#on-clockwise-and-on-anticlockwise-triggers
      then:
        - if:                               # https://esphome.io/automations/actions#if-action
            condition:
              - lambda: return id(changeRadioMode).state == "VOLUME";
            then:
              - logger.log: "Volume Up"     # https://esphome.io/components/logger.html#logger-log-action
              - select.next:                # https://esphome.io/components/select/#select-next-action
                  id: volumeSelect
                  cycle: False    
        - if:
            condition:
              - lambda: return id(changeRadioMode).state == "STATION";
            then:
              - logger.log: "Station Up"    # https://esphome.io/components/logger.html#logger-log-action
              - select.next:                # https://esphome.io/components/select/#select-next-action
                  id: stationSelect
                  cycle: True


binary_sensor:                              # https://esphome.io/components/binary_sensor/

  - id: rot_enc_btn
    platform: gpio                          # https://esphome.io/components/binary_sensor/gpio
    name: "Кнопка на крутилке"
    pin:                                    # https://esphome.io/guides/configuration-types#config-pin-schema
      number: 33
      inverted: true
      mode:
          input: True
          pullup: True 
    filters:                                # https://esphome.io/components/sensor/#sensor-filters
      - delayed_on: 10ms
    on_multi_click:                         # https://esphome.io/components/binary_sensor/#on-multi-click
    - timing:
        - ON for at most 1s
        - OFF for at most 1s
        - ON for at most 1s
        - OFF for at least 0.2s
      then:
        - logger.log: "Double Clicked"      # https://esphome.io/components/logger.html#logger-log-action
        - select.next:                      # https://esphome.io/components/select/#select-next-action
            id: changeRadioMode
            cycle: True
    - timing:
        - ON for 1s to 2s
        - OFF for at least 0.5s
      then:
        - logger.log: "Single Long Clicked" # https://esphome.io/components/logger.html#logger-log-action
        # - radio.toggle_mute
    - timing:
        - ON for at most 1s
        - OFF for at least 0.5s
      then:
        - logger.log: "Single Short Clicked"# https://esphome.io/components/logger.html#logger-log-action
        - select.next:                      # https://esphome.io/components/select/#select-next-action
            id: displaySelect
            cycle: True


output:                                     # https://esphome.io/components/output/

  - id: buzzer_output
    platform: ledc                          # https://esphome.io/components/output/ledc
    pin: 32
    channel: 2


rtttl:                                      # https://esphome.io/components/rtttl
    id: buzzer
    output: buzzer_output
    gain: 5%
    on_finished_playback: 
      then:
        - select.next:                      # https://esphome.io/components/select/#select-next-action
            id: melodySelect
            cycle: True


select:                                     # https://esphome.io/components/select/

  # - id: selectDemo
  #   platform: template                      # https://esphome.io/components/select/template
  #   name: "Demo"
  #   internal: False
  #   options:
  #     - "Empty"
  #   optimistic: true

  - id: changeRadioMode
    platform: template                      # https://esphome.io/components/select/template
    name: "Режим изменения"
    internal: False
    options:
      - "VOLUME"
      - "STATION"
    optimistic: true
    on_value:                               # https://esphome.io/components/select/#on-value
      - logger.log:                         # https://esphome.io/components/logger.html#logger-log-action
          format: "changeRadioMode (Режим изменения): %s"
          args: ["x.c_str()"]

  - id: displaySelect
    platform: template                      # https://esphome.io/components/select/template
    name: "Экран"
    internal: False
    options:
      - "TIME"
      - "BME280"
      - "RADIO"
    optimistic: true
    on_value:                               # https://esphome.io/components/select/#on-value
      - component.update: lcd               # https://esphome.io/automations/actions#component-update-action
      - logger.log:                         # https://esphome.io/components/logger.html#logger-log-action
          format: "displaySelect (Экран): %s"
          args: ["x.c_str()"]

  - id: melodySelect
    platform: template                      # https://esphome.io/components/select/template
    name: "Мелодия"
    internal: False
    optimistic: true
    options:
      - "Indiana"
      - "Entertainer"
      - "Bond"
      - "MahnaMahna"
      - "MissionImp"
      - "Pacman"
      - "Terminator II"
      - "Toccata"
      - "Flinstones"
      - "Tetris"
      - "AxelF"
      - "girl"
      - "careaboutus"
      - "Scatman"
      - "Smoke"
      - "countdown"
      - "VanessaMae"
      - "Verve"
      - "Wannabe"
      - "Yaketysax"
      - "StarWars"
      - "StWars"
      - "Cantina"
      - "SWEnd"

  # - id: melodySelect
  #   platform: template                      # https://esphome.io/components/select/template
  #   name: "Мелодия"
  #   internal: False
  #   optimistic: true
  #   options:
  #     - "Indiana:d=4,o=5,b=250:e,8p,8f,8g,8p,1c6,8p.,d,8p,8e,1f,p.,g,8p,8a,8b,8p,1f6,p,a,8p,8b,2c6,2d6,2e6,e,8p,8f,8g,8p,1c6,p,d6,8p,8e6,1f.6,g,8p,8g,e.6,8p,d6,8p,8g,e.6,8p,d6,8p,8g,f.6,8p,e6,8p,8d6,2c6"
  #     - "Entertainer:d=4,o=5,b=140:8d,8d#,8e,c6,8e,c6,8e,2c.6,8c6,8d6,8d#6,8e6,8c6,8d6,e6,8b,d6,2c6,p,8d,8d#,8e,c6,8e,c6,8e,2c.6,8p,8a,8g,8f#,8a,8c6,e6,8d6,8c6,8a,2d6"
  #     - "Bond:d=4,o=5,b=80:32p,16c#6,32d#6,32d#6,16d#6,8d#6,16c#6,16c#6,16c#6,16c#6,32e6,32e6,16e6,8e6,16d#6,16d#6,16d#6,16c#6,32d#6,32d#6,16d#6,8d#6,16c#6,16c#6,16c#6,16c#6,32e6,32e6,16e6,8e6,16d#6,16d6,16c#6,16c#7,c.7,16g#6,16f#6,g#.6"
  #     - "MahnaMahna:d=16,o=6,b=125:c#,c.,b5,8a#.5,8f.,4g#,a#,g.,4d#,8p,c#,c.,b5,8a#.5,8f.,g#.,8a#.,4g,8p,c#,c.,b5,8a#.5,8f.,4g#,f,g.,8d#.,f,g.,8d#.,f,8g,8d#.,f,8g,d#,8c,a#5,8d#.,8d#.,4d#,8d#."
  #     - "MissionImp:d=16,o=6,b=95:32d,32d#,32d,32d#,32d,32d#,32d,32d#,32d,32d,32d#,32e,32f,32f#,32g,g,8p,g,8p,a#,p,c7,p,g,8p,g,8p,f,p,f#,p,g,8p,g,8p,a#,p,c7,p,g,8p,g,8p,f,p,f#,p,a#,g,2d,32p,a#,g,2c#,32p,a#,g,2c,a#5,8c,2p,32p,a#5,g5,2f#,32p,a#5,g5,2f,32p,a#5,g5,2e,d#,8d"
  #     - "Pacman:d=4,o=5,b=112:32b,32p,32b6,32p,32f#6,32p,32d#6,32p,32b6,32f#6,16p,16d#6,16p,32c6,32p,32c7,32p,32g6,32p,32e6,32p,32c7,32g6,16p,16e6,16p,32b,32p,32b6,32p,32f#6,32p,32d#6,32p,32b6,32f#6,16p,16d#6,16p,32d#6,32e6,32f6,32p,32f6,32f#6,32g6,32p,32g6,32g#6,32a6,32p,32b.6"
  #     - "Terminator II:d=4,o=5,b=90:32d6,16e6,2f6,8e6,8c6,2f,16p,32d6,16e6,2f6,8e6,8c6,2a6,2g6"
  #     - "Toccata:d=4,o=5,b=160:16a4,16g4,1a4,16g4,16f4,16d4,16e4,2c#4,16p,d.4,2p,16a4,16g4,1a4,8e.4,8f.4,8c#.4,2d4"
  #     - "Flinstones:d=4,o=5,b=40:32p,16f6,16a#,16a#6,32g6,16f6,16a#.,16f6,32d#6,32d6,32d6,32d#6,32f6,16a#,16c6,d6"
  #     - "Tetris:d=4,o=5,b=160:e6,8b,8c6,8d6,16e6,16d6,8c6,8b,a,8a,8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,2a,8p,d6,8f6,a6,8g6,8f6,e6,8e6,8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,a"
  #     - "AxelF:d=4,o=5,b=125:32p,8g,8p,16a#.,8p,16g,16p,16g,8c6,8g,8f,8g,8p,16d.6,8p,16g,16p,16g,8d#6,8d6,8a#,8g,8d6,8g6,16g,16f,16p,16f,8d,8a#,2g,p,ss,16f6,8d6,8c6,8a#,g,8a#.,16g,16p,16g,8c6,8g,8f,g,8d.6,16g,16p,16g,8d#6,8d6,8a#,8g,8d6,8g6,16g,16f,16p,16f,8d,8a#,2g"
  #     - "girl:d=4,o=5,b=125:8g#,8e,8g#,8c#6,a,p,8f#,8d#,8f#,8b,g#,8f#,8e,p,8e,8c#,f#,c#,p,8f#,8e,g#,f#"
  #     - "careaboutus:d=4,o=5,b=125:16f,16e,16f,16e,16f,16e,8d,16e,16d,16e,16d,16e,16d,16c,16d,d"
  #     - "Scatman:d=4,o=5,b=200:8b,16b,32p,8b,16b,32p,8b,2d6,16p,16c#.6,16p.,8d6,16p,16c#6,8b,16p,8f#,2p.,16c#6,8p,16d.6,16p.,16c#6,16b,8p,8f#,2p,32p,2d6,16p,16c#6,8p,16d.6,16p.,16c#6,16a.,16p.,8e,2p.,16c#6,8p,16d.6,16p.,16c#6,16b,8p,8b,16b,32p,8b,16b,32p,8b,2d6,16p,16c#.6,16p.,8d6,16p,16c#6,8b,16p,8f#,2p.,16c#6,8p,16d.6,16p.,16c#6,16b,8p,8f#,2p,32p,2d6,16p,16c#6,8p,16d.6,16p.,16c#6,16a.,16p.,8e,2p.,16c#6,8p,16d.6,16p.,16c#6,16a,8p,8e,2p,32p,16f#.6,16p.,16b.,16p."
  #     - "Smoke:d=4,o=5,b=112:c,d#,f.,c,d#,8f#,f,p,c,d#,f.,d#,c,2p,8p,c,d#,f.,c,d#,8f#,f,p,c,d#,f.,d#,c,p"
  #     - "countdown:d=4,o=5,b=125:p,8p,16b,16a,b,e,p,8p,16c6,16b,8c6,8b,a,p,8p,16c6,16b,c6,e,p,8p,16a,16g,8a,8g,8f#,8a,g.,16f#,16g,a.,16g,16a,8b,8a,8g,8f#,e,c6,2b.,16b,16c6,16b,16a,1b"
  #     - "VanessaMae:d=4,o=6,b=70:32c7,32b,16c7,32g,32p,32g,32p,32d#,32p,32d#,32p,32c,32p,32c,32p,32c7,32b,16c7,32g#,32p,32g#,32p,32f,32p,16f,32c,32p,32c,32p,32c7,32b,16c7,32g,32p,32g,32p,32d#,32p,32d#,32p,32c,32p,32c,32p,32g,32f,32d#,32d,32c,32d,32d#,32c,32d#,32f,16g,8p,16d7,32c7,32d7,32a#,32d7,32a,32d7,32g,32d7,32d7,32p,32d7,32p,32d7,32p,16d7,32c7,32d7,32a#,32d7,32a,32d7,32g,32d7,32d7,32p,32d7,32p,32d7,32p,32g,32f,32d#,32d,32c,32d,32d#,32c,32d#,32f,16c"
  #     - "Verve:d=4,o=5,b=180:e,g,e,f,d,2f,a#,f,2a#,a,f,2a,p,e,g,e,f,d,2f,a#,f,2a#,a,f,2a,p"
  #     - "Wannabe:d=4,o=5,b=125:16g,16g,16g,16g,8g,8a,8g,8e,8p,16c,16d,16c,8d,8d,8c,e,p,8g,8g,8g,8a,8g,8e,8p,c6,8c6,8b,8g,8a,16b,16a,g"
  #     - "Yaketysax:d=4,o=5,b=125:8d.,16e,8g,8g,16e,16d,16a4,16b4,16d,16b4,8e,16d,16b4,16a4,16b4,8a4,16a4,16a#4,16b4,16d,16e,16d,g,p,16d,16e,16d,8g,8g,16e,16d,16a4,16b4,16d,16b4,8e,16d,16b4,16a4,16b4,8d,16d,16d,16f#,16a,8f,d,p,16d,16e,16d,8g,16g,16g,8g,16g,16g,8g,8g,16e,8e.,8c,8c,8c,8c,16e,16g,16a,16g,16a#,8g,16a,16b,16a#,16b,16a,16b,8d6,16a,16b,16d6,8b,8g,8d,16e6,16b,16b,16d,8a,8g,g"
  #     - "StarWars:d=4,o=5,b=45:32p,32f#,32f#,32f#,8b.,8f#.6,32e6,32d#6,32c#6,8b.6,16f#.6,32e6,32d#6,32c#6,8b.6,16f#.6,32e6,32d#6,32e6,8c#.6,32f#,32f#,32f#,8b.,8f#.6,32e6,32d#6,32c#6,8b.6,16f#.6,32e6,32d#6,32c#6,8b.6,16f#.6,32e6,32d#6,32e6,8c#6"
  #     - "StWars:d=4,o=5,b=180:8f,8f,8f,2a#.,2f.6,8d#6,8d6,8c6,2a#.6,f.6,8d#6,8d6,8c6,2a#.6,f.6,8d#6,8d6,8d#6,2c6,p,8f,8f,8f,2a#.,2f.6,8d#6,8d6,8c6,2a#.6,f.6,8d#6,8d6,8c6,2a#.6,f.6,8d#6,8d6,8d#6,2c6"
  #     - "Cantina:d=4,o=5,b=250:8a,8p,8d6,8p,8a,8p,8d6,8p,8a,8d6,8p,8a,8p,8g#,a,8a,8g#,8a,g,8f#,8g,8f#,f.,8d.,16p,p.,8a,8p,8d6,8p,8a,8p,8d6,8p,8a,8d6,8p,8a,8p,8g#,8a,8p,8g,8p,g.,8f#,8g,8p,8c6,a#,a,g"
  #     - "SWEnd:d=4,o=5,b=225:2c,1f,2g.,8g#,8a#,1g#,2c.,c,2f.,g,g#,c,8g#.,8c.,8c6,1a#.,2c,2f.,g,g#.,8f,c.6,8g#,1f6,2f,8g#.,8g.,8f,2c6,8c.6,8g#.,8f,2c,8c.,8c.,8c,2f,8f.,8f.,8f,2f"


  - id: volumeSelect
    platform: template                      # https://esphome.io/components/select/template
    name: "Громкость"
    internal: False
    optimistic: true
    options:
      - Кто здесь?        # 0
      - Очень тихо 1      # 1
      - Очень тихо 2      # 2
      - Тихо 1            # 3
      - Тихо 2            # 4
      - Ниже серединки 1  # 5
      - Ниже серединки 2  # 6
      - Серединка 1       # 7
      - Серединка 2       # 8
      - Выше серединки 1  # 9
      - Выше серединки 2  # 10
      - Громко 1          # 11
      - Громко 2          # 12
      - Очень громко 1    # 13
      - Очень громко 2    # 14
      - Are you nuts!?    # 15
    on_value:                               # https://esphome.io/components/select/#on-value
        # https://esphome.io/api/helpers_8h
        # https://esphome.io/api/helpers_8h_source
        # https://esphome.io/api/classesphome_1_1select_1_1_select
        # - lambda: id(id_volume) = std::stoi(str_until(x, ','));
      # - radio.set_volume:
      #     volume: !lambda |-
      #       return id(volumeSelect).active_index().value();
      - component.update: lcd               # https://esphome.io/automations/actions#component-update-action
      - logger.log:                         # https://esphome.io/components/logger.html#logger-log-action
          format: "volumeSelect (Громкость): %s"
          args: ["x.c_str()"]

  - id: stationSelect
    platform: template                      # https://esphome.io/components/select/template
    name: "Радиостанция"
    internal: False
    optimistic: true
    options:
      # - 875,Business FM
      # - 879,Like FM
      # - 883,Ретро FM
      - 887,Yumor FM
      # - 891,Радио Jazz
      # - 895,Радио Калина Красная
      - 899,Rekord
      - 903,AutoRadio
      # - 908,Relax FM
      # - 912,Радио Sputnik
      # - 916,Радио Культура
      # - 920,Москва FM
      # - 924,Радио Дача
      # - 928,Радио Карнавал
      # - 932,STUDIO 21
      # - 936,Коммерсант FM
      # - 940,Восток FM
      # - 944,Первое Спортивное Радио
      # - 948,Говорит Москва
      # - 952,Rock FM
      # - 956,Радио Звезда
      - 960,Dorojnoe
      # - 964,Такси FM
      # - 968,Детское радио
      # - 972,Радио КП
      - 976,Vesti FM
      # - 980,Радио Шоколад
      # - 984,Новое Радио
      # - 988,Радио Romantika
      # - 992,Радио Орфей
      # - 996,Радио Русский Хит
      # - 1001,Серебряннй дождь
      # - 1005,Жара FM
      # - 1012,DFM
      - 1018,Nashe
      # - 1021,Монте-Карло
      - 1025,Comedy
      # - 1030,Шансон
      # - 1034,Маяк
      # - 1037,Maximum
      # - 1042,Радио ENERGY
      # - 1047,Радио 7
      # - 1050,Радио Гордость
      # - 1053,Capital FM
      - 1057,Russkoe
      # - 1062,Европа Плюс
      # - 1066,Love Radio
      # - 1070,KISS FM
      # - 1074,Хит FM
      # - 1078,Милицейская волна
    # restore_value: True
    on_value:                               # https://esphome.io/components/select/#on-value
        # https://esphome.io/api/helpers_8h
        # https://esphome.io/api/helpers_8h_source
        # https://esphome.io/api/classesphome_1_1select_1_1_select
        # - lambda: |- 
        #     auto band = std::stoi(str_until(x, ',')); 
        #     id(id_band) = band; 
        #     id(rda5807m_id).set_band(band);
      # - radio.set_band:
      #     band: !lambda |-
      #       return std::stoi(str_until(x, ','));
      - component.update: lcd               # https://esphome.io/automations/actions#component-update-action
      - logger.log:                         # https://esphome.io/components/logger.html#logger-log-action
          format: "stationSelect (Радиостанция): %s"
          args: ["x.c_str()"]


display:                                    # https://esphome.io/components/display/lcd_display
  - id: lcd                                 # https://esphome.io/api/classesphome_1_1lcd__base_1_1_l_c_d_display
    platform: lcd_pcf8574                   # https://esphome.io/components/display/lcd_display#lcd-pcf8574-component
    i2c_id: bus
    address: 0x27
    dimensions: 16x2
    user_characters:                        # https://esphome.io/components/display/lcd_display#user-defined-characters
      - position: 0
        data: 
        - 0b00000
        - 0b00000
        - 0b01110
        - 0b10001
        - 0b10101
        - 0b10001
        - 0b01110
        - 0b00000
      - position: 1
        data: 
        - 0b00000
        - 0b00000
        - 0b00000
        - 0b00000
        - 0b00000
        - 0b11111
        - 0b11111
        - 0b11111
      - position: 2
        data: 
        - 0b11111
        - 0b11111
        - 0b11111
        - 0b00000
        - 0b00000
        - 0b00000
        - 0b00000
        - 0b00000
      - position: 3
        data: 
        - 0b11111
        - 0b11111
        - 0b11111
        - 0b00000
        - 0b00000
        - 0b00000
        - 0b11111
        - 0b11111
      - position: 4
        data: 
        - 0b00111
        - 0b01111
        - 0b11111
        - 0b11111
        - 0b11111
        - 0b11111
        - 0b11111
        - 0b11111
      - position: 5
        data: 
        - 0b11100
        - 0b11110
        - 0b11111
        - 0b11111
        - 0b11111
        - 0b11111
        - 0b11111
        - 0b11111
      - position: 6
        data: 
        - 0b11111
        - 0b11111
        - 0b11111
        - 0b11111
        - 0b11111
        - 0b11111
        - 0b01111
        - 0b00111
      - position: 7
        data: 
        - 0b11111
        - 0b11111
        - 0b11111
        - 0b11111
        - 0b11111
        - 0b11111
        - 0b11110
        - 0b11100
    update_interval: 1s
    # http://cppstudio.com/cat/309/325/
    # https://esphome.io/api/helpers_8h
    # https://esphome.io/components/display/#display-printf
    # https://esphome.io/api/classesphome_1_1sensor_1_1_sensor
    # https://esphome.io/cookbook/lambda_magic#lambda-magic-pages
    # https://esphome.io/components/display/lcd_display#rendering-lambda
    lambda: |-
      it.clear();
      auto index = id(displaySelect).active_index();  // https://esphome.io/components/select/#lambda-calls
      switch (index.value()) {
        case 0:
          static char top[10][4] = {
            "\x04""\x02""\x05", "\x02""\x05""\x20", "\x02""\x03""\x05", "\x02""\x03""\x07", "\x04""\x01""\xFF", "\x06""\x03""\x02", "\x04""\x03""\x02", "\x02""\x02""\x05", "\x06""\x03""\x07", "\x06""\x03""\x05",
          };
          static char bottom[10][4] = {
            "\x06""\x01""\x07", "\x01""\xFF""\x01", "\x04""\x03""\x01", "\x01""\x03""\x05", "\x20""\x20""\xFF", "\x01""\x03""\x05", "\x06""\x03""\x05", "\x20""\x20""\xFF", "\x04""\x03""\x05", "\x01""\x03""\x07"
          };
          if (id(time_device).now().is_valid()) {
            auto timeOfDay = id(time_device).now();
            uint8_t cnt;
            uint8_t hour = timeOfDay.hour;
            uint8_t minute = timeOfDay.minute;

            cnt = 0;
            while (hour >= 10) { cnt += 1; hour -= 10; }
            it.print(0, 0, top[cnt]);
            it.print(0, 1, bottom[cnt]);
            it.print(4, 0, top[hour]);
            it.print(4, 1, bottom[hour]);

            cnt = 0;
            while (minute >= 10) {cnt += 1; minute -= 10; }
            it.print(9, 0, top[cnt]);
            it.print(9, 1, bottom[cnt]);
            it.print(13, 0, top[minute]);
            it.print(13, 1, bottom[minute]);
          }
          break;
        case 1:
          if (id(time_device).now().is_valid())
            it.print(4, 0, id(time_device).now().strftime("%H:%M:%S"));
          if (id(bme280_Temperature).has_state())
            it.printf(1, 1, "%.0f\xDF", id(bme280_Temperature).state);
          if (id(bme280_Humidity).has_state())
            it.printf(6, 1, "%.0f%%", id(bme280_Humidity).state);
          if (id(bme280_Pressure).has_state())
            it.printf(11, 1, "%.0fm", id(bme280_Pressure).state);
          break;
        case 2:
          auto state = id(stationSelect).state.c_str();
          double band = (double)std::stoi(str_until(state, ',')) / 10;
          char* name = strchr(state, ',') + 1;
          it.printf(0, 0, "%5.1f %s", band, name);
          size_t vol = id(volumeSelect).active_index().value();
          for (int i = 0; i < vol; i++)
            it.printf(i, 1, "\xFF");
          break;
      }
